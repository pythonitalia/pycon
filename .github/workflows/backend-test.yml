name: Backend tests

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "backend/**/*"
      - "backend/*"
      - ".github/workflows/backend-test.yml"

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.11.6"
      - run: pip install pdm==2.10.4

      - name: Cache PDM
        uses: actions/cache@v1
        with:
          path: ./.venv
          key: pdm-${{ hashFiles('**/pdm.lock') }}-1

      - name: Install python dependencies
        working-directory: backend
        run: pdm install

      - name: Install codecov
        working-directory: backend
        run: pip install codecov

      - name: pytest
        working-directory: backend
        run: |
          set +e
          OUTPUT=$(pdm run pytest --cov-report xml --cov=. --cov-fail-under 80)
          STATUS=$?
          echo "$OUTPUT"
          cd ..
          codecov
          exit $STATUS
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports['5432'] }}/postgres
          STRIPE_SECRET_API_KEY: fake-key
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          MEDIA_FILES_STORAGE_BACKEND: django.core.files.storage.FileSystemStorage
          STRIPE_SUBSCRIPTION_PRICE_ID: ""
          STRIPE_WEBHOOK_SIGNATURE_SECRET: ""
