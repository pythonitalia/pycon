name: Backend tests

on:
  pull_request:
    paths:
    - 'backend/**/*'
    - 'backend/*'
    - '.github/workflows/backend-test.yml'

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7.9'
      - run: pip install poetry

      - name: Cache Poetry
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}-v2
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}-v2

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.create false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install python dependencies
        working-directory: backend
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install codecov
        working-directory: backend
        run: pip install codecov
      - name: pytest
        working-directory: backend
        run: |
            set +e
            OUTPUT=$(poetry run pytest --cov-report xml --cov=. --cov-fail-under 99)
            STATUS=$?
            echo "$OUTPUT"
            cd ..
            codecov
            exit $STATUS
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports['5432'] }}/postgres
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7.9'
      - run: pip install poetry
      - name: Install dependencies
        working-directory: backend
        run: poetry install
      - name: pytest
        working-directory: backend
        run: poetry run pytest --integration
        env:
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
