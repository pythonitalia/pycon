name: Backend checks

on:
  pull_request:
    paths:
      - "backend/**/*"
      - "backend/*"
      - ".github/workflows/backend-checks.yml"

jobs:
  check-migrations:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.6"
      - run: pip install pdm==2.10.4

      - name: Cache PDM
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: backend/.venv
          key: pdm-${{ hashFiles('**/pdm.lock') }}-2

      - name: Install python dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: pdm install

      - name: Check missing not pushed migrations
        run: pdm run python manage.py makemigrations --check
        env:
          DJANGO_SETTINGS_MODULE: pycon.settings.test
          STRIPE_SECRET_API_KEY: ""
          STRIPE_SUBSCRIPTION_PRICE_ID: ""
          STRIPE_WEBHOOK_SIGNATURE_SECRET: ""
          CELERY_BROKER_URL: ""
          CELERY_RESULT_BACKEND: ""

  # check-building-container:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: backend

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ matrix.service.name }}
  #     - name: Build test
  #       uses: docker/build-push-action@v4.0.0
  #       with:
  #         context: ./backend
  #         file: ./backend/Dockerfile
  #         builder: ${{ steps.buildx.outputs.name }}
  #         provenance: false
  #         push: false
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache
  #         platforms: linux/amd64

  # check-building-arm-container:
  #   runs-on: [self-hosted]
  #   defaults:
  #     run:
  #       working-directory: backend

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ matrix.service.name }}-arm
  #     - name: Build test
  #       uses: docker/build-push-action@v4.0.0
  #       with:
  #         context: ./backend
  #         file: ./backend/Dockerfile
  #         builder: ${{ steps.buildx.outputs.name }}
  #         provenance: false
  #         push: false
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache
  #         platforms: linux/arm64
